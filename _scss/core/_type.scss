// ==== TYPOGRAPHY ==== //

// Define all global font styles here.

// 1. Variables
// 2. font()
// 3. Global styles

// 1. Variables //

$sans: 'Overpass', Arial, sans-serif;
$sans-normal: 400;
$sans-semibold: 600;
$sans-bold: 800;

$serif: Georgia, serif;
$serif-normal: 500;
$serif-bold: 700;

$code: 'Courier New', Courier, monospace;

$modularscale: (
  base: 1em,
  ratio: 1.25
);

$typi: (
  null: (
    12px,
    2
  ),
  x-small: 16px,
  medium: 20px,
  x-large: 24px
);

// 2. underline() //

@mixin underline($bg-color: white, $bg-shade: base, $txt-color: $primary) {
  $selection-color: palette(blue, lighter);

  background-repeat: no-repeat, no-repeat, repeat-x;
  background-position: 0% 90%, 100% 90%, 0% 90%;
  background-size: 0.05em 1px, 0.05em 1px, 1px 1px;
  color: palette($txt-color);

  &:hover,
  &:focus {
    background-image: linear-gradient(
        palette($bg-color, $bg-shade),
        palette($bg-color, $bg-shade)
      ),
      linear-gradient(
        palette($bg-color, $bg-shade),
        palette($bg-color, $bg-shade)
      ),
      linear-gradient(palette($txt-color), palette($txt-color));
    text-shadow: 0.03em 0 palette($bg-color, $bg-shade),
      -0.03em 0 palette($bg-color, $bg-shade),
      0 0.03em palette($bg-color, $bg-shade),
      0 -0.03em palette($bg-color, $bg-shade),
      0.06em 0 palette($bg-color, $bg-shade),
      -0.06em 0 palette($bg-color, $bg-shade),
      0.09em 0 palette($bg-color, $bg-shade),
      -0.09em 0 palette($bg-color, $bg-shade),
      0.12em 0 palette($bg-color, $bg-shade),
      -0.12em 0 palette($bg-color, $bg-shade),
      0.15em 0 palette($bg-color, $bg-shade),
      -0.15em 0 palette($bg-color, $bg-shade);

    &::selection {
      background: $selection-color;
      text-shadow: 0.03em 0 $selection-color, -0.03em 0 $selection-color,
        0 0.03em $selection-color, 0 -0.03em $selection-color,
        0.06em 0 $selection-color, -0.06em 0 $selection-color,
        0.09em 0 $selection-color, -0.09em 0 $selection-color,
        0.12em 0 $selection-color, -0.12em 0 $selection-color,
        0.15em 0 $selection-color, -0.15em 0 $selection-color;
    }

    &::before,
    &::after,
    *,
    *::before,
    *::after {
      text-shadow: none;
    }
  }
}

// 3. font() //

// The font() function accepts a style parameter.
// It is intended to promote consistency in the typography,
// therefore the number of styles should be kept to a minimum.
// Attributes which change between instances should not be defined here (e.g. color).

@mixin font($style: null) {
  a {
    @include underline();
  }

  @if $style == null {
    @warn "Mixin font() received no input! Please provide a style.";

    color: red;
    font-size: ms(10);
  } @else if $style == 'title' {
    color: palette(gray, dark);
    font-size: ms(4);
    font-weight: $sans-bold;
    line-height: 1.4;

    a {
      background-size: 0.05em 2px, 0.05em 2px, 2px 2px;
    }

    .serif & {
      font-weight: $serif-bold;
    }
  } @else if $style == 'header1' {
    margin-top: 0.1rem;
    margin-bottom: 0.5rem;
    clear: right;
    font-size: ms(3);
    font-weight: $sans-bold;
    line-height: 1.25;

    &::after {
      display: block;
      width: 2em;
      height: 0.16em;
      margin-top: 0.5rem;
      border-radius: 0.08em;
      background-color: palette($primary);
      content: '';
    }

    .serif & {
      font-weight: $serif-bold;
    }
  } @else if $style == 'header2' {
    display: inline;
    margin-top: 0.5rem;
    margin-bottom: 0.25rem;
    font-size: ms(2);
    font-weight: $sans-bold;
    line-height: 1.25;

    a {
      background-size: 0.05em 2px, 0.05em 2px, 2px 2px;
    }

    .serif & {
      font-weight: $serif-bold;
    }
  } @else if $style == 'header3' {
    display: inline;
    margin-top: 0.5rem;
    margin-bottom: 0.25rem;
    color: palette(gray, dark);
    font-size: ms(1);
    font-weight: $sans-bold;
    line-height: 1.25;

    .serif & {
      font-weight: $serif-bold;
    }
  } @else if $style == 'body' {
    a {
      font-weight: $sans-semibold;
    }

    .serif & a {
      font-weight: $serif-bold;
    }
  } @else if $style == 'quote' {
    color: palette(gray, dark);
    font-size: ms(4);
    line-height: 1.4;

    a {
      background-size: 0.05em 2px, 0.05em 2px, 2px 2px;
      font-weight: $sans-bold;
    }

    .serif & a {
      font-weight: $serif-bold;
    }
  } @else if $style == 'app' {
    color: palette(gray);
    font-family: $sans;
    font-size: ms(-1);
    font-weight: $sans-semibold;
    letter-spacing: 0.25px;
    line-height: 1.5;
  } @else {
    @warn "Mixin font() received invalid input! This style does not exist.";

    color: red;
    font-size: ms(10);
  }
}

// 3. Global styles //

// Update the foundational and global aspects of the page here.

html {
  @include typi-base;

  background-color: palette(gray, darker);
  word-wrap: break-word;
  box-sizing: border-box;
}

*,
*::before,
*::after {
  // Inherit box-sizing to make it easier to change the property for components that leverage other behavior; see http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/.
  box-sizing: inherit;
}

body {
  min-width: 100vw;
  min-height: 100vh;
  background-color: palette(white);
  color: palette(gray, darker);
  font-family: $sans;
  font-weight: $sans-normal;
  font-feature-settings: 'lnum', 'salt';
  overflow-x: hidden;

  &.serif {
    font-family: $serif;
    font-weight: $serif-normal;
  }
}

// Limits width on large screens and centers content.
.site {
  max-width: 100rem;
  margin: 0 auto;
}

a {
  border: 0;
  color: inherit;
  text-decoration: none;
}

strong,
.strong {
  font-weight: $sans-bold;

  .serif & {
    font-weight: $serif-bold;
  }
}

dfn,
i,
em,
.em {
  font-style: italic;
}

code,
kbd,
tt,
var,
samp,
pre {
  font-family: $code;
}

pre {
  max-width: 100%;
  margin: 0 0 1.75em;
  padding: 1.75em;
  border: 1px solid palette(gray, light);
  font-size: 1rem;
  line-height: 1.3125;
  white-space: pre-wrap;
  overflow: auto;
  word-wrap: break-word;
}

code {
  padding: 0.125em 0.25em;
  background-color: palette(gray, light);
}

abbr,
acronym {
  border-bottom: 1px dotted palette(gray, light);
  cursor: help;
}

mark {
  padding: 0.125em 0.25em;
  background: palette(orange, light);
  color: #fff;
  text-decoration: none;
}

big {
  font-size: 125%;
}

hr {
  margin-top: 1rem;
  margin-bottom: 1rem;
  border: 0;
  box-sizing: border-box;

  &::before {
    display: block;
    height: 2px;
    background-color: palette(gray, light);
    content: '';
  }
}

time {
  @include font(app);

  display: inline-block;
}
